<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// start properties
// ammo - decreased when used
ammo = 1;
dimage_speed = 0.5;

state = "stand";
sprite_index = stand_spr;
image_speed = dimage_speed;
state_time = 0;

move_speed = 1;
slept = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state != "dying" ){
    state = "dying";
    sprite_index = spr_player_dying;
    image_speed = dimage_speed;

    audio_play_sound( snd_pd, 10, false );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "stand";
sprite_index = stand_spr;
image_speed = dimage_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// state decision
if( state != "dying" and state != "sleeping" ){
    // buttons actions
    if( keyboard_check_pressed(shootb) or gamepad_button_check_pressed(gamepad, shootb)){
        state = "shoot";
        sprite_index = shoot_spr;
        image_index = 0;
        image_speed = 0;
        state_time = 0;
    }
    else if( keyboard_check_pressed(crouchb) or gamepad_button_check_pressed( gamepad, crouchb) ){
        state = "crouch";
        sprite_index = crouch_spr;
        image_index = 0;
        image_speed = dimage_speed;
        state_time = 0;
    }
    else if( keyboard_check_pressed(walkrb) or gamepad_button_check_pressed(gamepad, walkrb) ){
        state = "walkr";
        sprite_index = walkr_spr;
        image_index = 0;
        image_speed = dimage_speed;
        state_time = 0;
    }
    else if( keyboard_check_pressed(walklb) or gamepad_button_check_pressed(gamepad, walklb) ){
        state = "walkl";
        sprite_index = walkl_spr;
        image_index = 0;
        image_speed = dimage_speed;
        state_time = 0;
    }
    else if( keyboard_check_pressed(suicideb) or gamepad_button_check_pressed(gamepad, suicideb) ){
        state = "suicide";
        sprite_index = suicide_spr;
        image_index = 0;
        image_speed = dimage_speed;
        state_time = 0;
    }
    else if( (keyboard_check_released(crouchb) and state == "crouch") or (keyboard_check_released(shootb) and state == "shoot")
        or (keyboard_check_released(walkrb) and state == "walkr") or (keyboard_check_released(walklb) and state == "walkl")
        or (gamepad_button_check_released(gamepad, crouchb) and state == "crouch") or (gamepad_button_check_released(gamepad, shootb) and state == "shoot")
        or (gamepad_button_check_released(gamepad, walkrb) and state == "walkr") or (gamepad_button_check_released(gamepad, walklb) and state == "walkl")
        or (keyboard_check_released(suicideb) and state == "suicide") or (gamepad_button_check_released(gamepad, suicideb) and state == "suicide")){
        
            if( keyboard_check(shootb) or gamepad_button_check(gamepad, shootb)){
                state = "shoot";
                sprite_index = shoot_spr;
                image_index = 0;
                image_speed = 0;
                state_time = 0;
            }
            else if( keyboard_check(crouchb) or gamepad_button_check( gamepad, crouchb) ){
                state = "crouch";
                sprite_index = crouch_spr;
                image_index = 0;
                image_speed = dimage_speed;
                state_time = 0;
            }
            else if( keyboard_check(walkrb) or gamepad_button_check(gamepad, walkrb) ){
                state = "walkr";
                sprite_index = walkr_spr;
                image_index = 0;
                image_speed = dimage_speed;
                state_time = 0;
            }
            else if( keyboard_check(walklb) or gamepad_button_check(gamepad, walklb) ){
                state = "walkl";
                sprite_index = walkl_spr;
                image_index = 0;
                image_speed = dimage_speed;
                state_time = 0;
            } 
            else if( keyboard_check(suicideb) or gamepad_button_check(gamepad, suicideb) ){
                state = "suicide";
                sprite_index = suicide_spr;
                image_index = 0;
                image_speed = dimage_speed;
                state_time = 0;
            }
            
            else {
                state = "stand";
                sprite_index = stand_spr;
                image_index = 0;
                image_speed = dimage_speed;
                state_time = 0;
            }
    }
}

// state actions
if( state == "stand" ){

}
else if( state == "crouch" ){
    if ( state_time &gt; room_speed ){
        sprite_index = spr_player_crouch_closed;
    }
}
else if( state == "shoot" ){
    if( state_time == floor(room_speed/2) and ammo &gt; 0){
        instance_create( x+(sprite_width/2), y-16, obj_bullet );
        image_index = 1;
        ammo -= 1;
    }
    if( state_time &gt;= floor((room_speed/2) + (room_speed/8)) ){
        image_index = 0;
        state_time = 0;
    }
}
else if( state == "walkr" ){
    x += move_speed;
}
else if( state == "walkl" ){
    x -= move_speed;
}
else if( state == "dying" ){
    if( image_index &gt;= image_number-1 ){
        image_speed=0;
    }
}
else if( state == "sleeping" ){
    if( image_index &gt;= image_number-1 ){
        image_speed = 0;
    }
    if ( state_time == room_speed * 2 ){
        night = instance_create( 0,0, obj_nightmare );
        night.player = id;
        night.alarm[0] = 1;
    }
}
else if( state == "suicide" ){
    if( state_time == floor(room_speed/2) and ammo &gt; 0){
        image_index = 1;
        ammo -= 1;
        audio_play_sound( snd_gun, 10, false );
        alarm[1] = 1;
    }
}

state_time++;
    
if( x &gt; room_width *4/5 ){
    room_goto_next()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mirror">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state != "dying" ){
    state = "dying";
    sprite_index = spr_player_dying;
    image_speed = dimage_speed;

    audio_play_sound( snd_pd, 10, false );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_beast">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( sprite_index != spr_player_crouch_closed ){
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fire">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state != "sleeping" and x == (obj_fire.x-obj_fire.sprite_xoffset+obj_fire.sprite_width)-(player*8) and !slept){
    state = "sleeping";
    sprite_index = spr_player_sleeping;
    image_speed = dimage_speed;
    state_time = 0;
    slept = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_face">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state != "dying" ){
    state = "dying";
    sprite_index = spr_player_dying;
    image_speed = dimage_speed;

    audio_play_sound( snd_pd, 10, false );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_death">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( state != "dying" ){
    state = "dying";
    sprite_index = spr_player_dying;
    image_speed = dimage_speed;

    audio_play_sound( snd_pd, 10, false );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
